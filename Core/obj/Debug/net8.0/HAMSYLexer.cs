//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\joe69\source\repos\HAMSY\Core\ANTLR\HAMSY.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Core.ANTLR {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class HAMSYLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		IDENTIFIER=25, INT=26, WS=27, COMMENT=28;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "IDENTIFIER", 
		"INT", "WS", "COMMENT"
	};


	public HAMSYLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'int'", "'('", "','", "')'", "'{'", "'}'", "'main'", "'return'", 
		"';'", "'='", "'while'", "'if'", "'else'", "'+'", "'-'", "'*'", "'/'", 
		"'%'", "'>'", "'<'", "'>='", "'<='", "'=='", "'!='"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, "IDENTIFIER", "INT", "WS", "COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "HAMSY.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1E\xA4\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3"+
		"\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\b\x3"+
		"\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3"+
		"\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3"+
		"\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14"+
		"\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x18"+
		"\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\a\x1A\x84\n\x1A\f\x1A"+
		"\xE\x1A\x87\v\x1A\x3\x1B\x3\x1B\x3\x1B\a\x1B\x8C\n\x1B\f\x1B\xE\x1B\x8F"+
		"\v\x1B\x5\x1B\x91\n\x1B\x3\x1C\x6\x1C\x94\n\x1C\r\x1C\xE\x1C\x95\x3\x1C"+
		"\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\a\x1D\x9E\n\x1D\f\x1D\xE\x1D\xA1\v"+
		"\x1D\x3\x1D\x3\x1D\x2\x2\x2\x1E\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2"+
		"\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2"+
		"\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2"+
		"\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2"+
		"\x1E\x3\x2\b\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x3"+
		"\x2\x33;\x3\x2\x32;\x5\x2\v\f\xF\xF\"\"\x4\x2\f\f\xF\xF\xA8\x2\x3\x3\x2"+
		"\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2"+
		"\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3"+
		"\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2"+
		"\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2"+
		"\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+"+
		"\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33"+
		"\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2"+
		"\x3;\x3\x2\x2\x2\x5?\x3\x2\x2\x2\a\x41\x3\x2\x2\x2\t\x43\x3\x2\x2\x2\v"+
		"\x45\x3\x2\x2\x2\rG\x3\x2\x2\x2\xFI\x3\x2\x2\x2\x11N\x3\x2\x2\x2\x13U"+
		"\x3\x2\x2\x2\x15W\x3\x2\x2\x2\x17Y\x3\x2\x2\x2\x19_\x3\x2\x2\x2\x1B\x62"+
		"\x3\x2\x2\x2\x1Dg\x3\x2\x2\x2\x1Fi\x3\x2\x2\x2!k\x3\x2\x2\x2#m\x3\x2\x2"+
		"\x2%o\x3\x2\x2\x2\'q\x3\x2\x2\x2)s\x3\x2\x2\x2+u\x3\x2\x2\x2-x\x3\x2\x2"+
		"\x2/{\x3\x2\x2\x2\x31~\x3\x2\x2\x2\x33\x81\x3\x2\x2\x2\x35\x90\x3\x2\x2"+
		"\x2\x37\x93\x3\x2\x2\x2\x39\x99\x3\x2\x2\x2;<\ak\x2\x2<=\ap\x2\x2=>\a"+
		"v\x2\x2>\x4\x3\x2\x2\x2?@\a*\x2\x2@\x6\x3\x2\x2\x2\x41\x42\a.\x2\x2\x42"+
		"\b\x3\x2\x2\x2\x43\x44\a+\x2\x2\x44\n\x3\x2\x2\x2\x45\x46\a}\x2\x2\x46"+
		"\f\x3\x2\x2\x2GH\a\x7F\x2\x2H\xE\x3\x2\x2\x2IJ\ao\x2\x2JK\a\x63\x2\x2"+
		"KL\ak\x2\x2LM\ap\x2\x2M\x10\x3\x2\x2\x2NO\at\x2\x2OP\ag\x2\x2PQ\av\x2"+
		"\x2QR\aw\x2\x2RS\at\x2\x2ST\ap\x2\x2T\x12\x3\x2\x2\x2UV\a=\x2\x2V\x14"+
		"\x3\x2\x2\x2WX\a?\x2\x2X\x16\x3\x2\x2\x2YZ\ay\x2\x2Z[\aj\x2\x2[\\\ak\x2"+
		"\x2\\]\an\x2\x2]^\ag\x2\x2^\x18\x3\x2\x2\x2_`\ak\x2\x2`\x61\ah\x2\x2\x61"+
		"\x1A\x3\x2\x2\x2\x62\x63\ag\x2\x2\x63\x64\an\x2\x2\x64\x65\au\x2\x2\x65"+
		"\x66\ag\x2\x2\x66\x1C\x3\x2\x2\x2gh\a-\x2\x2h\x1E\x3\x2\x2\x2ij\a/\x2"+
		"\x2j \x3\x2\x2\x2kl\a,\x2\x2l\"\x3\x2\x2\x2mn\a\x31\x2\x2n$\x3\x2\x2\x2"+
		"op\a\'\x2\x2p&\x3\x2\x2\x2qr\a@\x2\x2r(\x3\x2\x2\x2st\a>\x2\x2t*\x3\x2"+
		"\x2\x2uv\a@\x2\x2vw\a?\x2\x2w,\x3\x2\x2\x2xy\a>\x2\x2yz\a?\x2\x2z.\x3"+
		"\x2\x2\x2{|\a?\x2\x2|}\a?\x2\x2}\x30\x3\x2\x2\x2~\x7F\a#\x2\x2\x7F\x80"+
		"\a?\x2\x2\x80\x32\x3\x2\x2\x2\x81\x85\t\x2\x2\x2\x82\x84\t\x3\x2\x2\x83"+
		"\x82\x3\x2\x2\x2\x84\x87\x3\x2\x2\x2\x85\x83\x3\x2\x2\x2\x85\x86\x3\x2"+
		"\x2\x2\x86\x34\x3\x2\x2\x2\x87\x85\x3\x2\x2\x2\x88\x91\a\x32\x2\x2\x89"+
		"\x8D\t\x4\x2\x2\x8A\x8C\t\x5\x2\x2\x8B\x8A\x3\x2\x2\x2\x8C\x8F\x3\x2\x2"+
		"\x2\x8D\x8B\x3\x2\x2\x2\x8D\x8E\x3\x2\x2\x2\x8E\x91\x3\x2\x2\x2\x8F\x8D"+
		"\x3\x2\x2\x2\x90\x88\x3\x2\x2\x2\x90\x89\x3\x2\x2\x2\x91\x36\x3\x2\x2"+
		"\x2\x92\x94\t\x6\x2\x2\x93\x92\x3\x2\x2\x2\x94\x95\x3\x2\x2\x2\x95\x93"+
		"\x3\x2\x2\x2\x95\x96\x3\x2\x2\x2\x96\x97\x3\x2\x2\x2\x97\x98\b\x1C\x2"+
		"\x2\x98\x38\x3\x2\x2\x2\x99\x9A\a\x31\x2\x2\x9A\x9B\a\x31\x2\x2\x9B\x9F"+
		"\x3\x2\x2\x2\x9C\x9E\n\a\x2\x2\x9D\x9C\x3\x2\x2\x2\x9E\xA1\x3\x2\x2\x2"+
		"\x9F\x9D\x3\x2\x2\x2\x9F\xA0\x3\x2\x2\x2\xA0\xA2\x3\x2\x2\x2\xA1\x9F\x3"+
		"\x2\x2\x2\xA2\xA3\b\x1D\x2\x2\xA3:\x3\x2\x2\x2\b\x2\x85\x8D\x90\x95\x9F"+
		"\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Core.ANTLR
